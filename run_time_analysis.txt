Task0: 
This taks involves the retrieval of a single list index by specifying an index number. 
Since this index number maps to a specific memory location, the operation is O(1)
because it only accesses the specific memory location by its address.

Thus, the time complexity of the solution for Task0 is O(1)


Task1:
This task was broken down as follows:
- retrieve senders and receivers of text messages
- retrieve diallers and recipients of phone calls
- join the lists above together
- identify unique numbers from the entire list and add the unique numbers to a new list
- print the size of the list of unique numbers

The following sub-tasks are all O(n): 
- retrieval of call diallers and recipients
- retrieval of text senders and recipients
- creation of a list of unique numbers
All of the above tasks require looping through a list of n possible inputs. 
(for example; to get all phone numbers or to check all phone numbers against a list of unique 
numbers and add the phone numbers that are not on the list).

Concatenation of four lists is O(n).
Checking the length using the built-in len() function is O(1).

Since the largest term is O(n), the time complexity of the solution for Task1 is O(n). 

Task2:
This task was broken into the following subtasks:
- identify the numbers of call diallers and call recipients
- join the two lists together
- loop through the combined list and identify unique numbers; 
for each unique number, loop through the list of calls ans sum up the total seconds
for calls where the number is either a dialler or a recipient.

The first 2 subtasks above have a time complexity of O(n). 
The third subtask has one component of O(n) nested inside another subtask (also O(n)). 
Thus taken together, the entire third subtask is O(n*n)=O(n^2) 

Therefore, the time complexity of Taks2 is O(n^2)

Task3:
